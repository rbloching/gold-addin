
// This file has been generated by the GUI designer. Do not modify.
namespace GoldAddin
{
	public partial class OutputOptionsWidget
	{
		private global::Gtk.Table table1;
		
		private global::Gtk.Label label1;
		
		private global::Gtk.Label label2;
		
		private global::Gtk.ComboBox outputFormatSelector;
		
		private global::Gtk.Entry outputTableName;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget GoldAddin.OutputOptionsWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "GoldAddin.OutputOptionsWidget";
			// Container child GoldAddin.OutputOptionsWidget.Gtk.Container+ContainerChild
			this.table1 = new global::Gtk.Table (((uint)(2)), ((uint)(2)), false);
			this.table1.Name = "table1";
			this.table1.RowSpacing = ((uint)(6));
			this.table1.ColumnSpacing = ((uint)(6));
			// Container child table1.Gtk.Table+TableChild
			this.label1 = new global::Gtk.Label ();
			this.label1.Name = "label1";
			this.label1.LabelProp = global::Mono.Unix.Catalog.GetString ("Compiled Grammar Table Name:");
			this.table1.Add (this.label1);
			global::Gtk.Table.TableChild w1 = ((global::Gtk.Table.TableChild)(this.table1 [this.label1]));
			w1.XOptions = ((global::Gtk.AttachOptions)(4));
			w1.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.label2 = new global::Gtk.Label ();
			this.label2.Name = "label2";
			this.label2.LabelProp = global::Mono.Unix.Catalog.GetString ("Table format:");
			this.table1.Add (this.label2);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table1 [this.label2]));
			w2.TopAttach = ((uint)(1));
			w2.BottomAttach = ((uint)(2));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.outputFormatSelector = global::Gtk.ComboBox.NewText ();
			this.outputFormatSelector.AppendText (global::Mono.Unix.Catalog.GetString ("Compiled Grammar Table (.cgt)"));
			this.outputFormatSelector.AppendText (global::Mono.Unix.Catalog.GetString ("Enhanced Grammar Table (.egt)"));
			this.outputFormatSelector.Name = "outputFormatSelector";
			this.table1.Add (this.outputFormatSelector);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table1 [this.outputFormatSelector]));
			w3.TopAttach = ((uint)(1));
			w3.BottomAttach = ((uint)(2));
			w3.LeftAttach = ((uint)(1));
			w3.RightAttach = ((uint)(2));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table1.Gtk.Table+TableChild
			this.outputTableName = new global::Gtk.Entry ();
			this.outputTableName.CanFocus = true;
			this.outputTableName.Name = "outputTableName";
			this.outputTableName.IsEditable = true;
			this.outputTableName.InvisibleChar = '‚óè';
			this.table1.Add (this.outputTableName);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table1 [this.outputTableName]));
			w4.LeftAttach = ((uint)(1));
			w4.RightAttach = ((uint)(2));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
		}
	}
}
